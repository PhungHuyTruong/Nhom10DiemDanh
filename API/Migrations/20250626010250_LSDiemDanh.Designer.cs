// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(ModuleDiemDanhDbContext))]
    [Migration("20250626010250_LSDiemDanh")]
    partial class LSDiemDanh
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Data.BanDaoTao", b =>
                {
                    b.Property<Guid>("IdBanDaoTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdVaiTro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaBanDaoTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenBanDaoTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid?>("VaiTroIdVaiTro")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdBanDaoTao");

                    b.HasIndex("VaiTroIdVaiTro");

                    b.ToTable("BanDaoTaos");
                });

            modelBuilder.Entity("API.Data.BoMonCoSo", b =>
                {
                    b.Property<Guid>("IdBoMonCoSo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdBoMon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdBoMonCoSo");

                    b.HasIndex("IdBoMon");

                    b.HasIndex("IdCoSo");

                    b.ToTable("BoMonCoSos");
                });

            modelBuilder.Entity("API.Data.CaHoc", b =>
                {
                    b.Property<Guid>("IdCaHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CoSoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenCaHoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan?>("ThoiGianBatDau")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("ThoiGianKetThuc")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdCaHoc");

                    b.HasIndex("CoSoId");

                    b.ToTable("CaHocs");
                });

            modelBuilder.Entity("API.Data.CapDoDuAn", b =>
                {
                    b.Property<Guid>("IdCDDA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaCapDoDuAn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenCapDoDuAn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdCDDA");

                    b.ToTable("CapDoDuAns");
                });

            modelBuilder.Entity("API.Data.CoSo", b =>
                {
                    b.Property<Guid>("IdCoSo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdCaHoc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDiaDiem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdIP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaCoSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCoSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdCoSo");

                    b.ToTable("CoSos");
                });

            modelBuilder.Entity("API.Data.DiaDiem", b =>
                {
                    b.Property<Guid>("IdDiaDiem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("BanKinh")
                        .HasColumnType("float");

                    b.Property<Guid?>("CoSosIdCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("KinhDo")
                        .HasColumnType("float");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDiaDiem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<double?>("ViDo")
                        .HasColumnType("float");

                    b.HasKey("IdDiaDiem");

                    b.HasIndex("CoSosIdCoSo");

                    b.ToTable("DiaDiems");
                });

            modelBuilder.Entity("API.Data.DiemDanh", b =>
                {
                    b.Property<Guid>("IdDiemDanh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCaHoc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhomXuong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSinhVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.HasKey("IdDiemDanh");

                    b.HasIndex("IdCaHoc");

                    b.HasIndex("IdNhanVien");

                    b.HasIndex("IdNhomXuong");

                    b.HasIndex("IdSinhVien");

                    b.ToTable("DiemDanhs");
                });

            modelBuilder.Entity("API.Data.DuAn", b =>
                {
                    b.Property<Guid>("IdDuAn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdBoMon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCDDA")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdHocKy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenDuAn")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdDuAn");

                    b.HasIndex("IdBoMon");

                    b.HasIndex("IdCDDA");

                    b.HasIndex("IdHocKy");

                    b.ToTable("DuAns");
                });

            modelBuilder.Entity("API.Data.HocKy", b =>
                {
                    b.Property<Guid>("IdHocKy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHocKy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenHocKy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdHocKy");

                    b.ToTable("HocKys");
                });

            modelBuilder.Entity("API.Data.IP", b =>
                {
                    b.Property<Guid>("IdIP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IP_DaiIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdCoSo")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KieuIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdIP");

                    b.HasIndex("IdCoSo");

                    b.ToTable("IPs");
                });

            modelBuilder.Entity("API.Data.ImportHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdKHNX")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImportedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImportHistory");
                });

            modelBuilder.Entity("API.Data.KHNXCaHoc", b =>
                {
                    b.Property<Guid>("IdNXCH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Buoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CoSoIdCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiemDanhTre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdCaHoc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdKHNX")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkOnline")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHoc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiGian")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdNXCH");

                    b.HasIndex("CoSoIdCoSo");

                    b.HasIndex("IdCaHoc");

                    b.HasIndex("IdKHNX");

                    b.ToTable("KHNXCaHocs");
                });

            modelBuilder.Entity("API.Data.KeHoach", b =>
                {
                    b.Property<Guid>("IdKeHoach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDuAn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBoMon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCapDoDuAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDuAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKeHoach")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdKeHoach");

                    b.HasIndex("IdDuAn");

                    b.ToTable("KeHoachs");
                });

            modelBuilder.Entity("API.Data.KeHoachNhomXuong", b =>
                {
                    b.Property<Guid>("IdKHNX")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKeHoach")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhomXuong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SoBuoi")
                        .HasColumnType("int");

                    b.Property<int>("SoSinhVien")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdKHNX");

                    b.HasIndex("IdKeHoach");

                    b.HasIndex("IdNhomXuong");

                    b.ToTable("KeHoachNhomXuongs");
                });

            modelBuilder.Entity("API.Data.LichGiangDay", b =>
                {
                    b.Property<Guid>("IdLichDay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HTGiangDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdDiaDiem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDuAn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNXCH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhomXuong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TTDiemDanh")
                        .HasColumnType("bit");

                    b.Property<bool>("TTDiemDanhMuon")
                        .HasColumnType("bit");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdLichDay");

                    b.HasIndex("IdDiaDiem");

                    b.HasIndex("IdDuAn");

                    b.HasIndex("IdNXCH");

                    b.HasIndex("IdNhomXuong");

                    b.ToTable("LichGiangDays");
                });

            modelBuilder.Entity("API.Data.LichHoc", b =>
                {
                    b.Property<Guid>("IDLichHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CaHocIdCaHoc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HocKyIdHocKy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IDHocKy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNXCH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNhomXuong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IDLichHoc");

                    b.HasIndex("CaHocIdCaHoc");

                    b.HasIndex("HocKyIdHocKy");

                    b.HasIndex("IDHocKy");

                    b.HasIndex("IdNXCH");

                    b.HasIndex("IdNhomXuong");

                    b.ToTable("LichHocs");
                });

            modelBuilder.Entity("API.Data.LichSuDiemDanh", b =>
                {
                    b.Property<Guid>("IdLSDD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdDiemDanh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdNXCH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungBuoiHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianDiemDanh")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int>("TrangThaiDuyet")
                        .HasColumnType("int");

                    b.HasKey("IdLSDD");

                    b.HasIndex("IdDiemDanh");

                    b.HasIndex("IdNXCH");

                    b.ToTable("LichSuDiemDanhs");
                });

            modelBuilder.Entity("API.Data.NhomXuong", b =>
                {
                    b.Property<Guid>("IdNhomXuong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdBoMon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdDuAn")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPhuTrachXuong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNhomXuong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdNhomXuong");

                    b.HasIndex("IdBoMon");

                    b.HasIndex("IdDuAn");

                    b.HasIndex("IdPhuTrachXuong");

                    b.ToTable("NhomXuongs");
                });

            modelBuilder.Entity("API.Data.PhuTrachXuong", b =>
                {
                    b.Property<Guid>("IdNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailFE")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EmailFPT")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("IdCoSo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdNhanVien");

                    b.HasIndex("IdCoSo");

                    b.ToTable("PhuTrachXuongs");
                });

            modelBuilder.Entity("API.Data.QuanLyBoMon", b =>
                {
                    b.Property<Guid>("IDBoMon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoSoHoatDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaBoMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenBoMon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IDBoMon");

                    b.ToTable("QuanLyBoMons");
                });

            modelBuilder.Entity("API.Data.SinhVien", b =>
                {
                    b.Property<Guid>("IdSinhVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("IdNhomXuong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVaiTro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSinhVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("NhomXuongIdNhomXuong")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenSinhVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<Guid?>("VaiTroIdVaiTro")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdSinhVien");

                    b.HasIndex("NhomXuongIdNhomXuong");

                    b.HasIndex("VaiTroIdVaiTro");

                    b.ToTable("SinhViens");
                });

            modelBuilder.Entity("API.Data.VaiTro", b =>
                {
                    b.Property<Guid>("IdVaiTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdVaiTro");

                    b.ToTable("VaiTros");
                });

            modelBuilder.Entity("API.Data.VaiTroNhanVien", b =>
                {
                    b.Property<Guid>("IdVTNV")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNhanVien")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVaiTro")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NgayCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdVTNV");

                    b.HasIndex("IdNhanVien");

                    b.HasIndex("IdVaiTro");

                    b.ToTable("VaiTroNhanViens");
                });

            modelBuilder.Entity("API.Data.BanDaoTao", b =>
                {
                    b.HasOne("API.Data.VaiTro", "VaiTro")
                        .WithMany("BanDaoTaos")
                        .HasForeignKey("VaiTroIdVaiTro");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("API.Data.BoMonCoSo", b =>
                {
                    b.HasOne("API.Data.QuanLyBoMon", "QuanLyBoMon")
                        .WithMany("BoMonCoSos")
                        .HasForeignKey("IdBoMon");

                    b.HasOne("API.Data.CoSo", "CoSo")
                        .WithMany("BoMonCoSos")
                        .HasForeignKey("IdCoSo");

                    b.Navigation("CoSo");

                    b.Navigation("QuanLyBoMon");
                });

            modelBuilder.Entity("API.Data.CaHoc", b =>
                {
                    b.HasOne("API.Data.CoSo", "CoSo")
                        .WithMany("CaHocs")
                        .HasForeignKey("CoSoId");

                    b.Navigation("CoSo");
                });

            modelBuilder.Entity("API.Data.DiaDiem", b =>
                {
                    b.HasOne("API.Data.CoSo", "CoSos")
                        .WithMany("DiaDiems")
                        .HasForeignKey("CoSosIdCoSo");

                    b.Navigation("CoSos");
                });

            modelBuilder.Entity("API.Data.DiemDanh", b =>
                {
                    b.HasOne("API.Data.CaHoc", "CaHoc")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("IdCaHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API.Data.PhuTrachXuong", "PhuTrachXuong")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("IdNhanVien")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API.Data.NhomXuong", "NhomXuong")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("IdNhomXuong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API.Data.SinhVien", "SinhVien")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("IdSinhVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaHoc");

                    b.Navigation("NhomXuong");

                    b.Navigation("PhuTrachXuong");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("API.Data.DuAn", b =>
                {
                    b.HasOne("API.Data.QuanLyBoMon", "QuanLyBoMon")
                        .WithMany("DuAns")
                        .HasForeignKey("IdBoMon");

                    b.HasOne("API.Data.CapDoDuAn", "CapDoDuAn")
                        .WithMany("DuAns")
                        .HasForeignKey("IdCDDA");

                    b.HasOne("API.Data.HocKy", "HocKy")
                        .WithMany("DuAns")
                        .HasForeignKey("IdHocKy");

                    b.Navigation("CapDoDuAn");

                    b.Navigation("HocKy");

                    b.Navigation("QuanLyBoMon");
                });

            modelBuilder.Entity("API.Data.IP", b =>
                {
                    b.HasOne("API.Data.CoSo", "CoSo")
                        .WithMany("IPs")
                        .HasForeignKey("IdCoSo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoSo");
                });

            modelBuilder.Entity("API.Data.KHNXCaHoc", b =>
                {
                    b.HasOne("API.Data.CoSo", null)
                        .WithMany("KHNXCaHocs")
                        .HasForeignKey("CoSoIdCoSo");

                    b.HasOne("API.Data.CaHoc", "CaHoc")
                        .WithMany("KHNXCaHocs")
                        .HasForeignKey("IdCaHoc");

                    b.HasOne("API.Data.KeHoachNhomXuong", "KeHoachNhomXuong")
                        .WithMany("KHNXCaHocs")
                        .HasForeignKey("IdKHNX");

                    b.Navigation("CaHoc");

                    b.Navigation("KeHoachNhomXuong");
                });

            modelBuilder.Entity("API.Data.KeHoach", b =>
                {
                    b.HasOne("API.Data.DuAn", "DuAn")
                        .WithMany()
                        .HasForeignKey("IdDuAn");

                    b.Navigation("DuAn");
                });

            modelBuilder.Entity("API.Data.KeHoachNhomXuong", b =>
                {
                    b.HasOne("API.Data.KeHoach", "KeHoach")
                        .WithMany("KeHoachNhomXuongs")
                        .HasForeignKey("IdKeHoach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.NhomXuong", "NhomXuong")
                        .WithMany("KeHoachNhomXuongs")
                        .HasForeignKey("IdNhomXuong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KeHoach");

                    b.Navigation("NhomXuong");
                });

            modelBuilder.Entity("API.Data.LichGiangDay", b =>
                {
                    b.HasOne("API.Data.DiaDiem", "DiaDiem")
                        .WithMany("LichGiangDays")
                        .HasForeignKey("IdDiaDiem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API.Data.DuAn", "DuAn")
                        .WithMany("LichGiangDays")
                        .HasForeignKey("IdDuAn");

                    b.HasOne("API.Data.KHNXCaHoc", "KHNXCaHoc")
                        .WithMany("LichGiangDays")
                        .HasForeignKey("IdNXCH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.NhomXuong", "NhomXuong")
                        .WithMany("LichGiangDays")
                        .HasForeignKey("IdNhomXuong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DiaDiem");

                    b.Navigation("DuAn");

                    b.Navigation("KHNXCaHoc");

                    b.Navigation("NhomXuong");
                });

            modelBuilder.Entity("API.Data.LichHoc", b =>
                {
                    b.HasOne("API.Data.CaHoc", null)
                        .WithMany("LichHocs")
                        .HasForeignKey("CaHocIdCaHoc");

                    b.HasOne("API.Data.HocKy", "HocKy")
                        .WithMany()
                        .HasForeignKey("HocKyIdHocKy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.DuAn", "DuAn")
                        .WithMany("LichHocs")
                        .HasForeignKey("IDHocKy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("API.Data.KHNXCaHoc", "KHNXCaHoc")
                        .WithMany("LichHocs")
                        .HasForeignKey("IdNXCH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.NhomXuong", "NhomXuong")
                        .WithMany("LichHocs")
                        .HasForeignKey("IdNhomXuong")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DuAn");

                    b.Navigation("HocKy");

                    b.Navigation("KHNXCaHoc");

                    b.Navigation("NhomXuong");
                });

            modelBuilder.Entity("API.Data.LichSuDiemDanh", b =>
                {
                    b.HasOne("API.Data.DiemDanh", "DiemDanh")
                        .WithMany("LichSuDiemDanhs")
                        .HasForeignKey("IdDiemDanh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Data.KHNXCaHoc", "KHNXCaHoc")
                        .WithMany("LichSuDiemDanhs")
                        .HasForeignKey("IdNXCH")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DiemDanh");

                    b.Navigation("KHNXCaHoc");
                });

            modelBuilder.Entity("API.Data.NhomXuong", b =>
                {
                    b.HasOne("API.Data.QuanLyBoMon", "QuanLyBoMon")
                        .WithMany("NhomXuongs")
                        .HasForeignKey("IdBoMon");

                    b.HasOne("API.Data.DuAn", "DuAn")
                        .WithMany("NhomXuongs")
                        .HasForeignKey("IdDuAn");

                    b.HasOne("API.Data.PhuTrachXuong", "PhuTrachXuong")
                        .WithMany("NhomXuongs")
                        .HasForeignKey("IdPhuTrachXuong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DuAn");

                    b.Navigation("PhuTrachXuong");

                    b.Navigation("QuanLyBoMon");
                });

            modelBuilder.Entity("API.Data.PhuTrachXuong", b =>
                {
                    b.HasOne("API.Data.CoSo", "CoSo")
                        .WithMany("PhuTrachXuongs")
                        .HasForeignKey("IdCoSo");

                    b.Navigation("CoSo");
                });

            modelBuilder.Entity("API.Data.SinhVien", b =>
                {
                    b.HasOne("API.Data.NhomXuong", "NhomXuong")
                        .WithMany("SinhViens")
                        .HasForeignKey("NhomXuongIdNhomXuong");

                    b.HasOne("API.Data.VaiTro", "VaiTro")
                        .WithMany("SinhViens")
                        .HasForeignKey("VaiTroIdVaiTro");

                    b.Navigation("NhomXuong");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("API.Data.VaiTroNhanVien", b =>
                {
                    b.HasOne("API.Data.PhuTrachXuong", "PhuTrachXuong")
                        .WithMany("VaiTroNhanViens")
                        .HasForeignKey("IdNhanVien")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("API.Data.VaiTro", "VaiTro")
                        .WithMany("VaiTroNhanViens")
                        .HasForeignKey("IdVaiTro")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("PhuTrachXuong");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("API.Data.CaHoc", b =>
                {
                    b.Navigation("DiemDanhs");

                    b.Navigation("KHNXCaHocs");

                    b.Navigation("LichHocs");
                });

            modelBuilder.Entity("API.Data.CapDoDuAn", b =>
                {
                    b.Navigation("DuAns");
                });

            modelBuilder.Entity("API.Data.CoSo", b =>
                {
                    b.Navigation("BoMonCoSos");

                    b.Navigation("CaHocs");

                    b.Navigation("DiaDiems");

                    b.Navigation("IPs");

                    b.Navigation("KHNXCaHocs");

                    b.Navigation("PhuTrachXuongs");
                });

            modelBuilder.Entity("API.Data.DiaDiem", b =>
                {
                    b.Navigation("LichGiangDays");
                });

            modelBuilder.Entity("API.Data.DiemDanh", b =>
                {
                    b.Navigation("LichSuDiemDanhs");
                });

            modelBuilder.Entity("API.Data.DuAn", b =>
                {
                    b.Navigation("LichGiangDays");

                    b.Navigation("LichHocs");

                    b.Navigation("NhomXuongs");
                });

            modelBuilder.Entity("API.Data.HocKy", b =>
                {
                    b.Navigation("DuAns");
                });

            modelBuilder.Entity("API.Data.KHNXCaHoc", b =>
                {
                    b.Navigation("LichGiangDays");

                    b.Navigation("LichHocs");

                    b.Navigation("LichSuDiemDanhs");
                });

            modelBuilder.Entity("API.Data.KeHoach", b =>
                {
                    b.Navigation("KeHoachNhomXuongs");
                });

            modelBuilder.Entity("API.Data.KeHoachNhomXuong", b =>
                {
                    b.Navigation("KHNXCaHocs");
                });

            modelBuilder.Entity("API.Data.NhomXuong", b =>
                {
                    b.Navigation("DiemDanhs");

                    b.Navigation("KeHoachNhomXuongs");

                    b.Navigation("LichGiangDays");

                    b.Navigation("LichHocs");

                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("API.Data.PhuTrachXuong", b =>
                {
                    b.Navigation("DiemDanhs");

                    b.Navigation("NhomXuongs");

                    b.Navigation("VaiTroNhanViens");
                });

            modelBuilder.Entity("API.Data.QuanLyBoMon", b =>
                {
                    b.Navigation("BoMonCoSos");

                    b.Navigation("DuAns");

                    b.Navigation("NhomXuongs");
                });

            modelBuilder.Entity("API.Data.SinhVien", b =>
                {
                    b.Navigation("DiemDanhs");
                });

            modelBuilder.Entity("API.Data.VaiTro", b =>
                {
                    b.Navigation("BanDaoTaos");

                    b.Navigation("SinhViens");

                    b.Navigation("VaiTroNhanViens");
                });
#pragma warning restore 612, 618
        }
    }
}
