@using API.Data
@model IEnumerable<Nhom10ModuleDiemDanh.Models.BoMonCoSoViewModel>

@{
    Layout = "~/Views/Shared/CanBoDaoTaoLayout.cshtml";
    var tenBoMon = ViewData["tenBoMon"]?.ToString() ?? "";
    var idBoMon = ViewData["idBoMon"]?.ToString() ?? "";
}

<!-- TIÊU ĐỀ -->
<div class="card bg-primary text-white mb-4">
    <div class="card-body">
        <h2 class="card-title">Quản lý bộ môn cơ sở</h2>
    </div>
</div>

<!-- BỘ LỌC -->
<form method="get" class="card mb-4" id="filterForm">
    <div class="card-header fw-bold">Bộ lọc</div>
    <div class="card-body row g-3">
        <div class="col-md-3">
            <label for="tenBoMon">Tìm kiếm theo tên bộ môn:</label>
            <input id="tenBoMon" name="tenBoMon" type="text" class="form-control" placeholder="Nhập tên bộ môn" />
        </div>
        <div class="col-md-3">
            <label for="idCoSo">Cơ sở:</label>
            @Html.DropDownList("idCoSo", ViewData["CoSos"] as SelectList, "Tất cả cơ sở", new { @class = "form-select" })
        </div>
        <div class="col-md-3">
            <label for="trangThai">Trạng thái:</label>
            <select id="trangThai" name="trangThai" class="form-select">
                <option value="Tất cả trạng thái" selected="@(ViewData["trangThai"]?.ToString() == "Tất cả trạng thái")">Tất cả trạng thái</option>
                <option value="Hoạt động" selected="@(ViewData["trangThai"]?.ToString() == "Hoạt động")">Hoạt động</option>
                <option value="Ngừng hoạt động" selected="@(ViewData["trangThai"]?.ToString() == "Ngừng hoạt động")">Ngừng hoạt động</option>
            </select>
        </div>
        <div class="col-md-3 d-flex align-items-end gap-2">
            <button type="submit" class="btn btn-primary w-50">Lọc</button>
            <a href="@Url.Action("Index", "BoMonCoSo", new { tenBoMon = tenBoMon, idBoMon = idBoMon })" class="btn btn-secondary w-50">Hủy lọc</a>
        </div>
    </div>
    <input type="hidden" id="originalTenBoMon" value="@tenBoMon" />
</form>

<!-- DANH SÁCH -->
<div class="card" id="indexContent">
    <div class="card-header d-flex justify-content-between align-items-center">
        <span class="fw-bold">Danh sách bộ môn cơ sở</span>
        <button class="btn btn-sm btn-primary" data-bs-toggle="modal" data-bs-target="#createModal" data-id-bo-mon="@idBoMon" data-ten-bo-mon="@tenBoMon">+ Thêm mới</button>
    </div>
    <div class="card-body p-0">
        <table class="table table-bordered table-hover mb-0 text-center">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>Tên bộ môn</th>
                    <th>Tên cơ sở</th>
                    <th>Trạng thái</th>
                    <th>Chức năng</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var item in Model.Select((value, index) => new { value, index }))
                    {
                        <tr>
                            <td>@(item.index + 1)</td>
                            <td>@item.value.TenBoMon</td>
                            <td>@(item.value.TenCoSo ?? "Tất cả cơ sở")</td>
                            <td>
                                <div class="form-check form-switch d-flex justify-content-center align-items-center gap-2">
                                    <input type="checkbox" class="form-check-input toggle-status" id="toggle-@item.value.IdBoMonCoSo" data-id="@item.value.IdBoMonCoSo" @(item.value.TrangThai ? "checked" : "") />
                                    <span class="badge rounded-pill bg-@(item.value.TrangThai ? "success" : "secondary")">
                                        @(item.value.TrangThai ? "Hoạt động" : "Ngừng hoạt động")
                                    </span>
                                </div>
                            </td>
                            <td>
                                <button class="btn btn-warning btn-sm edit-btn" data-id="@item.value.IdBoMonCoSo" data-bs-toggle="modal" data-bs-target="#editModal">✏️</button>
                                <button class="btn btn-info btn-sm details-btn" data-id="@item.value.IdBoMonCoSo" data-bs-toggle="modal" data-bs-target="#detailsModal">🔍</button>
                                <button class="btn btn-danger btn-sm delete-btn" data-id="@item.value.IdBoMonCoSo">🗑️</button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="5" class="text-center">Không có dữ liệu</td></tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- MODAL THÊM MỚI -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="createModalLabel">Thêm bộ môn cơ sở</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="createModalBody">
                <!-- Nội dung sẽ được load bằng AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-primary" id="saveCreateBtn">Thêm</button>
            </div>
        </div>
    </div>
</div>

<!-- MODAL SỬA -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="editModalLabel">Sửa bộ môn cơ sở</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="editModalBody">
                <!-- Nội dung sẽ được load bằng AJAX -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" class="btn btn-warning" id="saveEditBtn">Lưu</button>
            </div>
        </div>
    </div>
</div>

<!-- MODAL CHI TIẾT -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-dark">
                <h5 class="modal-title" id="detailsModalLabel">Chi tiết bộ môn cơ sở</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detailsModalBody">
                <!-- Nội dung sẽ được load chi tiết -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            // Reset ô tìm kiếm
            $('#tenBoMon').val('');

            // Load Create Modal
            $('#createModal').on('show.bs.modal', function (e) {
                var button = $(e.relatedTarget);
                var idBoMon = button.data('id-bo-mon') || '';
                var tenBoMon = button.data('ten-bo-mon') || $('#originalTenBoMon').val() || '';
                $.ajax({
                    url: '@Url.Action("Create", "BoMonCoSo")' + '?idBoMon=' + encodeURIComponent(idBoMon) + '&tenBoMon=' + encodeURIComponent(tenBoMon),
                    type: 'GET',
                    success: function (data) {
                        $('#createModalBody').html(data);
                        $('#createForm').validate({
                            ignore: '[name="TenCoSo"]'
                        });
                        // Đảm bảo tenBoMon được gán đúng và readonly
                        if (tenBoMon) {
                            $('#createForm input[name="TenBoMon"]').val(tenBoMon);
                            $('#createForm input[name="TenBoMon"]').prop('readonly', true);
                        }
                    },
                    error: function (xhr) {
                        alert('Không thể tải form thêm bộ môn cơ sở: ' + xhr.responseText);
                    }
                });
            });

            // Save Create
            $('#saveCreateBtn').click(function () {
                var form = $('#createForm');
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);

                if (form.valid()) {
                    var tenBoMon = $('#createForm input[name="TenBoMon"]').val() || $('#originalTenBoMon').val() || '';
                    var formData = form.serializeArray();
                    if (tenBoMon) {
                        formData.push({ name: 'TenBoMon', value: tenBoMon });
                    }
                    console.log('Form Data:', formData); // Debug
                    $.ajax({
                        url: '@Url.Action("Create", "BoMonCoSo")',
                        type: 'POST',
                        data: formData,
                        success: function (response) {
                            console.log('Response:', response); // Debug
                            if (response.success) {
                                $('#createModal').modal('hide');
                                var originalTenBoMon = $('#originalTenBoMon').val() || '';
                                var idCoSo = $('#idCoSo').val() || '';
                                var trangThai = $('#trangThai').val() || '';
                                var queryString = '?tenBoMon=' + encodeURIComponent(originalTenBoMon) +
                                                 '&idCoSo=' + encodeURIComponent(idCoSo) +
                                                 '&trangThai=' + encodeURIComponent(trangThai) +
                                                 '&idBoMon=' + encodeURIComponent('@idBoMon');
                                window.location.href = '@Url.Action("Index", "BoMonCoSo")' + queryString;
                            } else {
                                alert(response.message || 'Lỗi khi thêm bộ môn cơ sở.');
                            }
                        },
                        error: function (xhr) {
                            console.log('Error:', xhr.responseText); // Debug
                            alert('Đã có lỗi xảy ra khi thêm bộ môn cơ sở: ' + xhr.responseText);
                        }
                    });
                } else {
                    alert('Vui lòng kiểm tra dữ liệu nhập vào.');
                }
            });

            // Load Edit Modal
            $(document).on('click', '.edit-btn', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("Edit", "BoMonCoSo")/' + id,
                    type: 'GET',
                    success: function (data) {
                        $('#editModalBody').html(data);
                        $('#editForm').validate({
                            ignore: '[name="TenCoSo"]'
                        });
                    },
                    error: function () {
                        alert('Không thể tải form sửa bộ môn cơ sở.');
                    }
                });
            });

            // Save Edit
            $('#saveEditBtn').click(function () {
                var form = $('#editForm');
                form.removeData('validator');
                form.removeData('unobtrusiveValidation');
                $.validator.unobtrusive.parse(form);

                var formData = form.serialize();
                var id = $('#editForm input[name="IdBoMonCoSo"]').val();
                $.ajax({
                    url: '@Url.Action("Edit", "BoMonCoSo")/' + id,
                    type: 'POST',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            $('#editModal').modal('hide');
                            window.location.href = window.location.pathname + window.location.search;
                        } else {
                            alert(response.message || 'Lỗi khi sửa bộ môn cơ sở.');
                        }
                    },
                    error: function () {
                        alert('Đã có lỗi xảy ra khi sửa bộ môn cơ sở.');
                    }
                });
            });

            // Load Details Modal
            $(document).on('click', '.details-btn', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("Details", "BoMonCoSo")/' + id,
                    type: 'GET',
                    success: function (data) {
                        $('#detailsModalBody').html(data);
                    },
                    error: function () {
                        alert('Không thể tải chi tiết bộ môn cơ sở.');
                    }
                });
            });

            // Delete
            $(document).on('click', '.delete-btn', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                if (confirm('Bạn có chắc chắn muốn xóa bộ môn cơ sở này?')) {
                    $.ajax({
                        url: '@Url.Action("Delete", "BoMonCoSo")',
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                window.location.href = window.location.pathname + window.location.search;
                            } else {
                                alert(response.message || 'Lỗi khi xóa bộ môn cơ sở.');
                            }
                        },
                        error: function () {
                            alert('Đã có lỗi xảy ra khi xóa bộ môn cơ sở.');
                        }
                    });
                }
            });

            // Toggle Status
            $(document).on('change', '.toggle-status', function () {
                var checkbox = $(this);
                var id = checkbox.data('id');
                var isChecked = checkbox.is(':checked');
                $.ajax({
                    url: '@Url.Action("ToggleStatus", "BoMonCoSo")',
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            var isActive = response.trangThai === 'Hoạt động';
                            checkbox.siblings('span').text(isActive ? 'Hoạt động' : 'Ngừng hoạt động')
                                .removeClass('bg-success bg-secondary')
                                .addClass(isActive ? 'bg-success' : 'bg-secondary');
                        } else {
                            alert(response.message || 'Lỗi khi cập nhật trạng thái.');
                            checkbox.prop('checked', !isChecked);
                        }
                    },
                    error: function () {
                        alert('Đã có lỗi xảy ra khi cập nhật trạng thái.');
                        checkbox.prop('checked', !isChecked);
                    }
                });
            });

            // Xử lý form lọc
            $('#filterForm').on('submit', function (e) {
                e.preventDefault(); // Ngăn chặn submit mặc định
                var originalTenBoMon = $('#originalTenBoMon').val() || '';
                var tenBoMonInput = $('#tenBoMon').val() || '';
                var tenBoMon = tenBoMonInput ? tenBoMonInput : originalTenBoMon; // Giữ originalTenBoMon nếu input trống
                var idCoSo = $('#idCoSo').val() || '';
                var trangThai = $('#trangThai').val() || '';
                var idBoMon = '@idBoMon' || '';
                var queryString = '?tenBoMon=' + encodeURIComponent(tenBoMon) +
                                 '&idCoSo=' + encodeURIComponent(idCoSo) +
                                 '&trangThai=' + encodeURIComponent(trangThai) +
                                 '&idBoMon=' + encodeURIComponent(idBoMon);
                window.location.href = '@Url.Action("Index", "BoMonCoSo")' + queryString;
                console.log('Query String:', queryString); // Debug
            });
        });
    </script>
}