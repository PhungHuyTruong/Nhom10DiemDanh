@model IEnumerable<API.Data.KHNXCaHoc>

@{
    Layout = "~/Views/Shared/PhuTrachXuongLayout.cshtml";
    ViewData["Title"] = "Danh Sách Ca Học";

    string keyword = ViewBag.Filter?.keyword as string ?? "";
    string trangThai = ViewBag.Filter?.trangThai?.ToString() ?? "";
    string caHoc = ViewBag.Filter?.caHoc as string ?? "";
    string ngay = ViewBag.Filter?.ngay as string ?? "";
}

<div class="container-fluid p-4">
    <div class="card bg-primary text-white mb-4">
        <div class="card-body">
            <h2 class="card-title">Quản lý ca học</h2>
        </div>
    </div>

    <!-- Bộ lọc -->
    <div class="card mb-3 shadow-sm">
        <div class="card-header fw-bold text-primary">
            <i class="fa fa-filter me-2"></i> Bộ lọc
        </div>
        <div class="card-body">
            <form method="get" class="row g-3 align-items-end">
            <input type="hidden" name="idKHNX" value="@ViewBag.IdKHNX" />
                <div class="col-md-3">
                    <label for="keyword" class="form-label">Từ khóa</label>
                    <input type="text" name="keyword" class="form-control" placeholder="Tìm kiếm theo mô tả" value="@keyword" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Trạng thái</label>
                    <select name="trangThai" class="form-select">
                        <option value="">Tất cả trạng thái</option>
                        <option value="sapdienra" selected="@(trangThai == "sapdienra" ? "selected" : null)">Sắp diễn ra</option>
                        <option value="dangdienra" selected="@(trangThai == "dangdienra" ? "selected" : null)">Đang diễn ra</option>
                        <option value="dadienra" selected="@(trangThai == "dadienra" ? "selected" : null)">Đã diễn ra</option>
                    </select>

                </div>
                <div class="col-md-2">
                    <label class="form-label">Ca học</label>
                    <select name="caHoc" class="form-select">
                        <option value="">Tất cả ca học</option>
                        @if (ViewBag.CaHocList != null)
                        {
                            @foreach (var ca in ViewBag.CaHocList)
                            {
                                <option value="@ca.IdCaHoc" selected="@(caHoc == ca.IdCaHoc.ToString() ? "selected" : null)">
                                    @ca.TenCaHoc
                                </option>

                            }

                        }
                    </select>

                </div>
                <div class="col-md-2">
                    <label class="form-label">Ngày diễn ra</label>
                    <input type="date" name="ngay" class="form-control" value="@ngay" />
                </div>
                <div class="col-md-2 text-end">
                    <button type="submit" class="btn btn-primary w-100">Lọc</button>
                      <a href="/KHNXCaHocs?idKHNX=@ViewBag.IdKHNX" class="btn btn-outline-secondary mt-1 w-100">Hủy lọc</a>
                </div>
            </form>
        </div>
    </div>

    <!-- Toolbar -->
    <div class="card rounded-0">
        <div class="card-body d-flex justify-content-between align-items-center flex-wrap gap-2">
            <h5 class="fw-bold text-primary mb-0">
                <i class="fa fa-table me-2"></i> Danh sách ca học
            </h5>
            <div class="d-flex flex-wrap gap-2">
                <a href="/ImportHistory" class="btn btn-outline-secondary btn-sm">
                    <i class="fa fa-history me-1"></i> Lịch sử import
                </a>
                <a class="btn btn-outline-secondary btn-sm"
                   asp-action="DownloadTemplate"
                   asp-controller="KHNXCaHocs"
                   asp-route-idKHNX="@ViewBag.IdKHNX">
                    <i class="fa fa-download me-1"></i> Tải xuống template
                </a>

                <form asp-action="ImportExcel"
                      asp-controller="KHNXCaHocs"
                      method="post"
                      enctype="multipart/form-data"
                      class="d-inline">
                    <input type="hidden" name="idKHNX" value="@ViewBag.IdKHNX" />
                    <label for="excelUpload" class="btn btn-outline-secondary btn-sm mb-0">
                        <i class="fa fa-file-import me-1"></i> Import Excel
                    </label>
                    <input type="file" name="file" id="excelUpload" class="d-none" onchange="this.form.submit()" />
                </form>

                <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addCaHocModal">
                    <i class="fa fa-plus me-1"></i> Thêm
                </button>
            </div>
        </div>
    </div>


    <!-- Bảng danh sách -->
    <div class="table-responsive shadow-sm">
        <table class="table table-bordered table-hover text-center align-middle">
            <thead class="table-light">
                <tr>
                    <th>Buổi</th>
                    <th>Ngày học</th>
                    <th>Thời gian</th>
                    <th>Ca học</th>
                    <th>Nội dung</th>
                    <th>Link online</th>
                    <th>Điểm danh trễ</th>
                    <th>Trạng thái</th>
                    <th>Chức năng</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.Buoi</td>
                            <td>@item.NgayHoc.ToString("dd/MM/yyyy")</td>
                            <td>
                                @if (item.CaHoc != null && item.CaHoc.ThoiGianBatDau.HasValue && item.CaHoc.ThoiGianKetThuc.HasValue)
                                {
                                    @($"{item.CaHoc.ThoiGianBatDau.Value.ToString(@"hh\:mm")} - {item.CaHoc.ThoiGianKetThuc.Value.ToString(@"hh\:mm")}")
                                }
                                else
                                {
                                    @item.ThoiGian
                                }
                            </td>
                            <td>
                                @if (item.CaHoc != null)
                                {
                                    <span class="fw-semibold">@item.CaHoc.TenCaHoc</span>
                                    @if (!string.IsNullOrWhiteSpace(item.LinkOnline))
                                    {
                                        <span class="badge bg-primary-subtle text-primary ms-1">Online</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary-subtle text-secondary ms-1">Offline</span>
                                    }
                                }
                                else
                                {
                                    @item.IdCaHoc
                                }
                            </td>





                            <td>
                                <button type="button" class="btn btn-link p-0 text-primary" data-bs-toggle="modal" data-bs-target="#noiDungModal" onclick="showNoiDung('@item.NoiDung')">
                                    Chi tiết
                                </button>
                            </td>

                            <td>
                                @if (!string.IsNullOrWhiteSpace(item.LinkOnline))
                                {
                                    <a href="@item.LinkOnline" class="link-no-underline" target="_blank">Link</a>

                                }
                            </td>
                            <td>@item.DiemDanhTre</td>
                            @{
                                var now = DateTime.Now;
                                DateTime? start = null;
                                DateTime? end = null;

                                if (item.CaHoc != null && item.CaHoc.ThoiGianBatDau.HasValue && item.CaHoc.ThoiGianKetThuc.HasValue)
                                {
                                    start = item.NgayHoc.Date + item.CaHoc.ThoiGianBatDau.Value;
                                    end = item.NgayHoc.Date + item.CaHoc.ThoiGianKetThuc.Value;
                                }
                            }

                            <td>
                                @if (start != null && end != null)
                                {
                                    if (now < start)
                                    {
                                        <span class="badge bg-warning text-dark">Sắp diễn ra</span>
                                    }
                                    else if (now >= start && now <= end)
                                    {
                                        <span class="badge bg-success">Đang diễn ra</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Đã diễn ra</span>
                                    }
                                }
                                else
                                {
                                    <span class="badge bg-light text-dark">Không xác định</span>
                                }
                            </td>

                            <td class="text-center">
                                @if (start != null && end != null && DateTime.Now > end)
                                {
                                    <span class="badge bg-light text-secondary">Không thể thao tác</span>
                                }
                                else
                                {
                                    <button class="btn btn-sm btn-warning me-1" title="Chỉnh sửa" onclick="showEditModal('@item.IdNXCH')">
                                        <i class="fas fa-pen"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger" onclick="deleteCaHoc('@item.IdNXCH')" title="Xóa">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                }
                            </td>


                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="9">Không có dữ liệu.</td></tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Modal thêm -->
    <div class="modal fade" id="addCaHocModal" tabindex="-1" aria-labelledby="addCaHocLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form id="createCaHocForm">
                    <div class="modal-header" style="background-color: forestgreen">
                        <h5 class="modal-title" id="addCaHocLabel" style="color: black">Thêm Ca Học</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                    </div>
                    <div class="modal-body row g-3">
                       
                        
                            <input type="hidden" name="IdKHNX" id="addIdKHNX" />
                       
                        <div class="col-md-6">
                            <label class="form-label" style="color: black">Buổi</label>
                            <input name="Buoi" class="form-control" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" style="color: black">Ngày học</label>
                            <input name="NgayHoc" type="date" class="form-control" required />
                        </div>
                        @* <div class="col-md-6">
                            <label class="form-label">Thời gian</label>
                            <input name="ThoiGian" id="addThoiGian" class="form-control" readonly />
                        </div>*@
                        <input type="hidden" name="ThoiGian" id="addThoiGian" />
                        <div class="col-md-6">
                            <label class="form-label" style="color: black">Nội dung</label>
                            <input name="NoiDung" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" style="color: black">Link online</label>
                            <input name="LinkOnline" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" style="color: black">Tên Ca học</label>
                            <select name="IdCaHoc" id="addIdCaHoc" class="form-select" required>
                                <option value="">Chọn tên ca học</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label" style="color: black">Điểm danh trễ</label>
                            <input name="DiemDanhTre" class="form-control" value="15 phút" readonly />
                        </div>
                        @*<div class="col-md-6">
                            <label class="form-label">Trạng thái</label>
                            <select name="TrangThai" class="form-select">
                                <option value="1">Hoạt động</option>
                                <option value="0">Ngừng</option>
                            </select>
                        </div>*@
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                        <button type="submit" class="btn btn-primary">Lưu</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editCaHocModal" tabindex="-1" aria-labelledby="editCaHocLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form id="editCaHocForm">
                <div class="modal-header" style="background-color: yellow">
                    <h5 class="modal-title" id="editCaHocLabel" style="color: black">Chỉnh sửa Ca Học</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
                </div>
                <div class="modal-body row g-3">
                    <input type="hidden" name="IdNXCH" />
                    <input type="hidden" name="IdKHNX" />
                    <div class="col-md-6">
                        <label class="form-label" style="color: black">Buổi</label>
                        <input name="Buoi" class="form-control" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label" style="color: black">Ngày học</label>
                        <input name="NgayHoc" type="date" class="form-control" required />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label" style="color: black">Ca học</label>
                        <select name="IdCaHoc" id="editIdCaHoc" class="form-select" required>
                            <option value="">Đang tải...</option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label" style="color: black">Nội dung</label>
                        <input name="NoiDung" class="form-control" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label" style="color: black">Link online</label>
                        <input name="LinkOnline" class="form-control" />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label" style="color: black">Điểm danh trễ</label>
                        <input name="DiemDanhTre" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-success">Lưu thay đổi</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Modal xem chi tiết nội dung -->
<div class="modal fade" id="noiDungModal" tabindex="-1" aria-labelledby="noiDungModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header" style="background-color: deepskyblue">
                <h5 class="modal-title" id="noiDungModalLabel" style="color: black">Chi tiết nội dung</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <p id="noiDungContent" class="mb-0 text-black"></p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', async function () {
            // Lấy dữ liệu ca học cho dropdown
            const caHocSelect = document.getElementById('addIdCaHoc');
            try {
                const response = await fetch('/api/KHNXCaHocs/GetCaHocsForDropdown');
                const result = await response.json();
                if (result.success && result.data && Array.isArray(result.data)) {
                    result.data.forEach(caHoc => {
                        const option = document.createElement('option');
                        option.value = caHoc.idCaHoc;
                        option.textContent = caHoc.tenCaHoc;
                        option.dataset.thoiGianBatDau = caHoc.thoiGianBatDau;
                        option.dataset.thoiGianKetThuc = caHoc.thoiGianKetThuc;
                        caHocSelect.appendChild(option);
                    });
                } else {
                    console.error("Không lấy được danh sách ca học:", result.message || "Lỗi không xác định");
                }
            } catch (error) {
                console.error("Lỗi khi fetch danh sách ca học:", error);
            }

            // Xử lý sự kiện khi chọn ca học trong dropdown
            caHocSelect.addEventListener('change', function () {
                const selectedOption = caHocSelect.options[caHocSelect.selectedIndex];
                const thoiGianBatDau = selectedOption.dataset.thoiGianBatDau;
                const thoiGianKetThuc = selectedOption.dataset.thoiGianKetThuc;
                const thoiGianInput = document.getElementById('addThoiGian');

                if (thoiGianBatDau && thoiGianKetThuc) {
                    thoiGianInput.value = `${thoiGianBatDau.substring(0, 5)} - ${thoiGianKetThuc.substring(0, 5)}`;
                } else {
                    thoiGianInput.value = ''; // Xóa nếu không có thời gian
                }
            });
        });

        document.getElementById("createCaHocForm").addEventListener("submit", async function (e) {
            e.preventDefault();
            const form = e.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            // Lấy IdKHNX từ URL (ví dụ: /KHNXCaHocs/Index?idkhnx=...)
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('idkhnx')) {
                data.IdKHNX = urlParams.get('idkhnx');
            } else {
                // Nếu không có IdKHNX từ URL, có thể cần cảnh báo hoặc lấy từ một nguồn khác
                console.warn("IdKHNX không tìm thấy trong URL. Đảm bảo IdKHNX được truyền đến trang.");
                // Tùy chọn: có thể return false để ngăn form submit nếu IdKHNX bắt buộc
                // return;
            }

            // Đặt mặc định cho DiemDanhTre nếu nó rỗng hoặc chưa được đặt
            if (!data.DiemDanhTre || data.DiemDanhTre.trim() === '') {
                data.DiemDanhTre = "15 phút";
            }

            if (data.NgayHoc)
                data.NgayHoc = new Date(data.NgayHoc).toISOString();

            try {
                const response = await fetch("/KHNXCaHocs/Create", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "RequestVerificationToken": document.querySelector('input[name="__RequestVerificationToken"]')?.value ?? ""
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();
                if (response.ok && result.success !== false) {
                    alert("Tạo ca học thành công!");
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addCaHocModal'));
                    modal.hide();
                    location.reload();
                } else {
                    alert("Lỗi: " + (result.message || "Không xác định"));
                }
            } catch (err) {
                console.error("Lỗi gửi:", err);
                alert("Lỗi kết nối máy chủ.");
            }
        });

        async function deleteCaHoc(id) {
            if (!confirm("Bạn có chắc chắn muốn xoá ca học này không?")) return;

            try {
                const response = await fetch('/KHNXCaHocs/Delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value ?? ""
                    },
                    body: JSON.stringify(id) // Gửi ID dạng string thuần
                });

                const result = await response.json();
                if (result.success) {
                    alert("Đã xoá thành công.");
                    location.reload();
                } else {
                    alert("Lỗi khi xoá: " + (result.message || "Không xác định"));
                }
            } catch (err) {
                alert("Lỗi kết nối máy chủ.");
                console.error(err);
            }
        }

        async function showEditModal(id) {
            try {
                // Lấy dữ liệu ca học từ server
                const response = await fetch(`/KHNXCaHocs/Details/${id}`);
                const data = await response.json();

                // Nạp dữ liệu vào form
                const form = document.getElementById("editCaHocForm");
                form.elements["IdNXCH"].value = data.idNXCH;
                form.elements["IdKHNX"].value = data.idKHNX;
                form.elements["Buoi"].value = data.buoi;
                form.elements["NgayHoc"].value = data.ngayHoc ? data.ngayHoc.split('T')[0] : '';
                form.elements["NoiDung"].value = data.noiDung || '';
                form.elements["LinkOnline"].value = data.linkOnline || '';
                form.elements["DiemDanhTre"].value = data.diemDanhTre || '';

                // Nạp dropdown ca học
                const select = document.getElementById('editIdCaHoc');
                select.innerHTML = '<option value="">Đang tải...</option>';
                const res = await fetch('/api/KHNXCaHocs/GetCaHocsForDropdown');
                const json = await res.json();
                if (json.success && Array.isArray(json.data)) {
                    select.innerHTML = '<option value="">Chọn ca học</option>';
                    json.data.forEach(c => {
                        const opt = document.createElement('option');
                        opt.value = c.idCaHoc;
                        opt.textContent = c.tenCaHoc;
                        if (c.idCaHoc == data.idCaHoc) opt.selected = true;
                        select.appendChild(opt);
                    });
                } else {
                    select.innerHTML = '<option value="">Không có ca học</option>';
                }

                // Hiện modal
                new bootstrap.Modal(document.getElementById("editCaHocModal")).show();
            } catch (err) {
                alert("Không tải được dữ liệu ca học.");
                console.error(err);
            }
        }

        document.getElementById("editCaHocForm").addEventListener("submit", async function (e) {
            e.preventDefault();
            const form = e.target;
            const formData = new FormData(form);
            const data = Object.fromEntries(formData.entries());

            if (data.NgayHoc)
                data.NgayHoc = new Date(data.NgayHoc).toISOString();

            try {
                const response = await fetch(`/KHNXCaHocs/Edit/${data.IdNXCH}`, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();
                if (response.ok && result.success !== false) {
                    alert("Đã cập nhật ca học!");
                    bootstrap.Modal.getInstance(document.getElementById('editCaHocModal')).hide();
                    location.reload();
                } else {
                    alert("Lỗi: " + (result.message || "Không xác định"));
                }
            } catch (err) {
                alert("Lỗi kết nối máy chủ.");
                console.error(err);
            }
        });

                function showNoiDung(noiDung) {
            const noiDungEl = document.getElementById("noiDungContent");
            noiDungEl.textContent = decodeURIComponent(noiDung); // Nếu có ký tự đặc biệt
        }

                 document.addEventListener('DOMContentLoaded', function () {
            // Lấy idKHNX từ URL
            const urlParams = new URLSearchParams(window.location.search);
            const idKHNX = urlParams.get('idKHNX');
            if (idKHNX) {
                // Gán vào input hidden khi mở modal
                document.getElementById('addIdKHNX').value = idKHNX;
            }
        });

    </script>
}
<style>
    button.btn-link {
        text-decoration: none;
    }

    .link-no-underline {
        text-decoration: none;
    }

        .link-no-underline:hover {
            text-decoration: underline;
        }

</style>