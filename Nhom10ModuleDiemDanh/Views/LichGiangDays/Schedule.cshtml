@model List<Nhom10ModuleDiemDanh.Models.LichGiangDayViewModel>

@{
    Layout = "~/Views/Shared/GiangVienLayout.cshtml";
    var today = DateTime.Today;
    int stt1 = 1;
    int stt2 = 1;

    string GetThuTrongTuan(DateTime date)
    {
        return date.DayOfWeek switch
        {
            DayOfWeek.Monday => "Monday",
            DayOfWeek.Tuesday => "Tuesday",
            DayOfWeek.Wednesday => "Wednesday",
            DayOfWeek.Thursday => "Thursday",
            DayOfWeek.Friday => "Friday",
            DayOfWeek.Saturday => "Saturday",
            DayOfWeek.Sunday => "Sunday",
            _ => ""
        };
    }
}

<h3 class="mb-3"><i class="bi bi-calendar3"></i> Lịch giảng dạy</h3>

<div class="card mb-4">
    <div class="card-header bg-info text-white">
        <i class="bi bi-funnel-fill"></i> Bộ lọc lịch giảng dạy
    </div>
    <div class="card-body row">
        <div class="col-md-4">
            <label class="form-label fw-semibold">Khoảng thời gian:</label>
            <select id="filterDays" class="form-select">
                <option value="all">Tất cả</option>
                <option value="7">7 ngày tới</option>
                <option value="14">14 ngày tới</option>
            </select>
        </div>
        <div class="col-md-4">
            <label class="form-label fw-semibold">Hình thức học:</label>
            <select id="filterMode" class="form-select">
                <option value="all">Tất cả</option>
                <option value="Online">Online</option>
                <option value="Offline">Offline</option>
            </select>
        </div>
        <div class="col-md-4 d-flex align-items-end">
            <button type="button" class="btn btn-primary mt-2" onclick="filterLichGiangDay()">Lọc</button>
        </div>
    </div>
</div>


<!-- Lịch hôm nay -->
<div class="card mb-4">
    <div class="card-header bg-info text-white"><i class="bi bi-pin-angle-fill"></i> Lịch dạy hôm nay</div>
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>Thời gian</th>
                    <th>Ca học</th>
                    <th>Điểm danh muộn</th>
                    <th>Xưởng</th>
                    <th>Dự án</th>
                    <th>Địa điểm</th>
                    <th>Link học</th>
                    <th>Hình thức</th>
                    <th>Chi tiết</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Where(x => x.NgayHoc.Date == today))
                {
                    <tr>
                        <td>@(stt1++)</td>
                        <td>@item.ThoiGian</td>
                        <td>@item.Ca</td>
                        <td class="text-warning">@item.DiemDanhTre</td>
                        <td>@item.TenNhomXuong</td>
                        <td>@item.DuAn</td>
                        <td>@(string.IsNullOrEmpty(item.LinkOnline) ? item.DiaDiem : "-")</td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.LinkOnline))
                            {
                                <a href="@item.LinkOnline" target="_blank">Vào lớp</a>
                            }
                            else
                            {
                                <span>-</span>
                            }
                        </td>
                        <td><span class="badge bg-@(item.HinhThuc == "Online" ? "success" : "secondary")">@item.HinhThuc</span></td>
                        <td><a href="#">Chi tiết</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Danh sách lịch giảng dạy khác -->
<div class="card">
    <div class="card-header bg-info text-white"><i class="bi bi-journal-text"></i> Danh sách lịch dạy</div>
    <div class="table-responsive">
        <table id="lichGiangDayTable" class="table table-bordered">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>Ngày dạy</th>
                    <th>Thời gian</th>
                    <th>Ca học</th>
                    <th>Điểm danh muộn</th>
                    <th>Xưởng</th>
                    <th>Dự án</th>
                    <th>Địa điểm</th>
                    <th>Hình thức</th>
                    <th>Link học</th>
                    <th>Chi tiết</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Where(x => x.NgayHoc.Date > today).OrderBy(x => x.NgayHoc))
                {
                    <tr data-ngayhoc="@item.NgayHoc.ToString("yyyy-MM-dd")" data-hinhthuc="@item.HinhThuc">
                        <td>@(stt2++)</td>
                        <td>@GetThuTrongTuan(item.NgayHoc), @item.NgayHoc.ToString("dd/MM/yyyy")</td>
                        <td>@item.ThoiGian</td>
                        <td>@item.Ca</td>
                        <td class="text-warning">@item.DiemDanhTre</td>
                        <td>@item.TenNhomXuong</td>
                        <td>@item.DuAn</td>
                        <td>@(string.IsNullOrEmpty(item.LinkOnline) ? item.DiaDiem : "-")</td>
                        <td><span class="badge bg-@(item.HinhThuc == "Online" ? "success" : "secondary")">@item.HinhThuc</span></td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.LinkOnline))
                            {
                                <a href="@item.LinkOnline" target="_blank">Vào lớp</a>
                            }
                            else
                            {
                                <span>-</span>
                            }
                        </td>
                        <td><a href="#">Chi tiết</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function filterLichGiangDay() {
            const days = document.getElementById("filterDays").value;
            const mode = document.getElementById("filterMode").value;

            const today = new Date();
            today.setHours(0, 0, 0, 0);

            const rows = document.querySelectorAll("#lichGiangDayTable tbody tr");

            rows.forEach(row => {
                const ngayHocStr = row.getAttribute("data-ngayhoc");
                const hinhThuc = row.getAttribute("data-hinhthuc");

                const ngayHoc = new Date(ngayHocStr);
                ngayHoc.setHours(0, 0, 0, 0);

                const diffDays = (ngayHoc - today) / (1000 * 60 * 60 * 24);
                let show = true;

                if (days !== "all") {
                    const maxDays = parseInt(days);
                    if (diffDays < 0 || diffDays > maxDays) show = false;
                }

                if (mode !== "all" && hinhThuc !== mode) show = false;

                row.style.display = show ? "" : "none";
            });
        }

        document.getElementById("filterDays").addEventListener("change", filterLichGiangDay);
        document.getElementById("filterMode").addEventListener("change", filterLichGiangDay);
    </script>
}
